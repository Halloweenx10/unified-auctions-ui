apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Chart.Name }}-ingress
  annotations:
    kubernetes.io/ingress.class: {{ .Values.ingress.class }}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    {{- if .Values.ingress.contentCache }}
    {{- with .Values.ingress.contentCache }}
    nginx.ingress.kubernetes.io/server-snippet: |
        location ~ ^/json-rpc/(.*)$ {

            # Cache using the `infura` cache
            proxy_cache infura;

            # Only cache `POST` requests
            proxy_cache_methods POST;

            # Document the cache result (HIT, MISS, ...) to the end-client
            add_header X-Cache-Status $upstream_cache_status;

            # Cache `200`-responses for X minutes. This is necessary
            # for responses that do not include `Cache-Control` headers
            # that tell nginx how long they are valid for. Infura does
            # not provide these headers.
            proxy_cache_valid 200 {{ required "Cache validity must be defined" .cacheValidDuration }};

            proxy_pass https://$1.infura.io/v3/{{ required "Infura key must be present if content caching is enabled" .infuraKey }};
        }
    {{- end }}
    {{- end }}
    {{- if .Values.ingress.isCertManagerActivated }}
    cert-manager.io/cluster-issuer: "cloudflare-issuer"
    {{- end }}
spec:
  {{- if .Values.ingress.tls }}
  tls:
    {{- .Values.ingress.tls | toYaml | nindent 4 }}
  {{- end }}
  rules:
    {{- $frontendName := .Values.frontend.name }}
    {{- range .Values.hosts }}
    - host: {{ required "A host is required for the ingress to work" . }}
      http:
        paths:
        - path: /(.*)
          pathType: Prefix
          backend:
            service:
              name: {{ $frontendName }}-service
              port:
                number: 80
    {{- end }}
